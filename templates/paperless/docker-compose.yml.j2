# ansible/templates/paperless/docker-compose.yml.j2

services:
  broker-{{ user.name }}:
    image: docker.io/library/redis:{{ redis.version }}
    restart: unless-stopped
    volumes:
      - redisdata-{{ user.name }}:/data
    networks:
      - paperless-net-{{ user.name }}

  db-{{ user.name }}:
    image: docker.io/library/postgres:17
    restart: unless-stopped
    volumes:
      - pgdata-{{ user.name }}:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    networks:
      - paperless-net-{{ user.name }}

  webserver-{{ user.name }}:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - db-{{ user.name }}
      - broker-{{ user.name }}
      - gotenberg-{{ user.name }}
      - tika-{{ user.name }}
    ports:
      - "{{ user.port }}:8000"
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./data:/usr/src/paperless/data
      - ./media:/usr/src/paperless/media
      - ./export:/usr/src/paperless/export
      - ./consume:/usr/src/paperless/consume
    env_file: .env
    environment:
      PAPERLESS_REDIS: redis://broker-{{ user.name }}:6379
      PAPERLESS_DBHOST: db-{{ user.name }}
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg-{{ user.name }}:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika-{{ user.name }}:9998
      PAPERLESS_URL: https://{{ user.subdomain }}.{{ domain }}
    networks:
      - paperless-net-{{ user.name }}

  gotenberg-{{ user.name }}:
    image: docker.io/gotenberg/gotenberg:latest
    restart: unless-stopped
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    networks:
      - paperless-net-{{ user.name }}

  tika-{{ user.name }}:
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped
    networks:
      - paperless-net-{{ user.name }}

volumes:
  pgdata-{{ user.name }}:
  redisdata-{{ user.name }}:

networks:
  paperless-net-{{ user.name }}: